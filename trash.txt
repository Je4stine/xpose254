 // const [Name, setName] = useState('');
  // const [Description, setDescription] = useState('');
  // const [Contact, setContact] = useState('');

  // const Refs = collection(db, "profile");

  // const submitProfile = async () => {
  //   await addDoc(Refs, { name: Name, description: Description, contact: Contact });
  //   navigation.navigate('Profile2');
  //   console.log({Name})
  // };


    return (
    <>
    <View>
      <Text style={{fontSize: 30, fontWeight: 'bold', color:'red', marginTop:40, alignSelf: 'center'}}>Profile</Text>
    </View>
    <View style={{alignItems:'center', justifyContent:'center', marginTop: '30%'}}>  
        <Text style={styles.profileText}>Your Username</Text>
        <TextInput
        style={styles.userNameInput}
        placeholder="Enter your Username"
        onChange={(event) => {
          setName(event.target.value);
        }}
        />
        <Text style={styles.profileText}>What do you expect from the Hookup?</Text>
        <TextInput
        style={styles.userNameInput}
        placeholder="Write a description"
        // value={Description}
        onChange={(event) => {
          setDescription(event.target.value);
        }}
        />
        <Text style={styles.profileText}> Your Contact info(Optional)</Text>
        <TextInput
        style={styles.userNameInput}
        placeholder="eg. Phone number"
        // value={Contact}
        onChange={(event) => {
          setContact(event.target.value);
        }}
        />
        
    </View>
     
        <View style={{alignItems:'flex-end', marginRight:30, position:'absolute', bottom:10, width:'95%'}}>
          <TouchableOpacity onPress={submitProfile}>
          <View style={{flexDirection:'row'}}> 
            <Text style={{fontSize:20, marginRight:5}}>Next</Text>
            <FontAwesome name="arrow-right" size={10} color="black" style={{ margin:5}}/>
          </View>
          </TouchableOpacity>
        </View>
      
    </>
  )
}




import React, {useState, useEffect} from 'react';
import { StyleSheet, Text, View, Image, TouchableHighlight } from 'react-native';
import * as ImagePicker from 'expo-image-picker';
import firebaseConfig from './firebaseConfig.tsx';
import { initializeApp } from 'firebase/app'; //validate yourself
import { getStorage, ref, uploadBytes } from 'firebase/storage'; //access the storage database

initializeApp(firebaseConfig);

export default function App() {
  useEffect(() => {
    (async () => {
      if (Platform.OS !== 'web') {
        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();
        if (status !== 'granted') {
          alert('Sorry, we need camera roll permissions to make this work!');
        }
      }
    })();
  }, []);

  const pickImage = async () => {
    let result = await ImagePicker.launchImageLibraryAsync({
      mediaTypes: ImagePicker.MediaTypeOptions.All,
      allowsEditing: true,
      aspect: [4, 3],
      quality: 1,
    });

    if (!result.cancelled) {
      const storage = getStorage(); //the storage itself
      const ref = ref(storage, 'image.jpg'); //how the image will be addressed inside the storage

      //convert image to array of bytes
      const img = await fetch(result.uri);
      const bytes = await img.blob();

      await uploadBytes(ref, bytes); //upload images
    }
  };

  return (
    <View style={{flex: 1, backgroundColor: '#fff', alignItems: 'center', justifyContent: 'center'}}>
      <TouchableHighlight onPress={pickImage}>
        <Text>select image</Text>
      </TouchableHighlight>
    </View>
  );
}





// const [isFirstLaunch, setisFirstLaunch] = useState(null);

  // useEffect(() => {
  //   AsyncStorage.getItem('alreadyLaunched').then(value=>{
  //     if(value==null){
  //       AsyncStorage.setItem('alreadyLaunched', 'true');
  //       setisFirstLaunch(true);
  //     } else{
  //       setisFirstLaunch(false)
  //     }
  //   });
  // } , []);

  // if(isFirstLaunch==null){
  //   return null;
  // } else if(isFirstLaunch==true){
  //   console.log('first launch');
  // }else{
  //   console.log('not first launch');
  // }
